/* Generated By:JavaCC: Do not edit this line. JpqlParserTreeConstants.java Version 7.0.10 */
package org.minijpa.jpa.jpql;

public interface JpqlParserTreeConstants
{
  public int JJTVOID = 0;
  public int JJTQLSTATEMENT = 1;
  public int JJTSELECTSTATEMENT = 2;
  public int JJTSELECTCLAUSE = 3;
  public int JJTSELECTITEM = 4;
  public int JJTSELECTEXPRESSION = 5;
  public int JJTJOINSINGLEVALUEDPATHEXPRESSION = 6;
  public int JJTSUBTYPE = 7;
  public int JJTJOINASSOCIATIONPATHEXPRESSION = 8;
  public int JJTJOIN = 9;
  public int JJTRANGEVARIABLEDECLARATION = 10;
  public int JJTIDENTIFICATIONVARIABLEDECLARATION = 11;
  public int JJTFROMCLAUSE = 12;
  public int JJTMAPFIELDIDENTIFICATIONVARIABLE = 13;
  public int JJTQUALIFIEDIDENTIFICATIONVARIABLE = 14;
  public int JJTGENERALIDENTIFICATIONVARIABLE = 15;
  public int JJTSIMPLESUBPATH = 16;
  public int JJTGENERALSUBPATH = 17;
  public int JJTTREATEDSUBPATH = 18;
  public int JJTSTATEFIELDPATHEXPRESSION = 19;
  public int JJTSTATEVALUEDPATHEXPRESSION = 20;
  public int JJTSINGLEVALUEDOBJECTPATHEXPRESSION = 21;
  public int JJTAGGREGATEEXPRESSION = 22;
  public int JJTFUNCTIONARG = 23;
  public int JJTSCALAREXPRESSION = 24;
  public int JJTTYPEDISCRIMINATOR = 25;
  public int JJTWHENCLAUSE = 26;
  public int JJTGENERALCASEEXPRESSION = 27;
  public int JJTCASEEXPRESSION = 28;
  public int JJTENTITYTYPEEXPRESSION = 29;
  public int JJTENUMEXPRESSION = 30;
  public int JJTBOOLEANEXPRESSION = 31;
  public int JJTDATETIMEEXPRESSION = 32;
  public int JJTSTRINGEXPRESSION = 33;
  public int JJTARITHMETICPRIMARY = 34;
  public int JJTARITHMETICFACTOR = 35;
  public int JJTARITHMETICTERM = 36;
  public int JJTARITHMETICEXPRESSION = 37;
  public int JJTALLORANYEXPRESSION = 38;
  public int JJTSTRINGEXPRESSIONCOMPARISON = 39;
  public int JJTARITHMETICEXPRESSIONCOMPARISON = 40;
  public int JJTBOOLEANEXPRESSIONCOMPARISON = 41;
  public int JJTDATETIMEEXPRESSIONCOMPARISON = 42;
  public int JJTENTITYTYPEEXPRESSIONCOMPARISON = 43;
  public int JJTCOMPARISONEXPRESSION = 44;
  public int JJTEXISTSEXPRESSION = 45;
  public int JJTCOLLECTIONVALUEDPATHEXPRESSION = 46;
  public int JJTNULLCOMPARISONEXPRESSION = 47;
  public int JJTLIKEEXPRESSION = 48;
  public int JJTINITEM = 49;
  public int JJTINEXPRESSION = 50;
  public int JJTBETWEENEXPRESSION = 51;
  public int JJTARITHMETICBETWEENEXPRESSION = 52;
  public int JJTSTRINGBETWEENEXPRESSION = 53;
  public int JJTDATETIMEBETWEENEXPRESSION = 54;
  public int JJTSIMPLECONDEXPRESSION = 55;
  public int JJTCONDITIONALPRIMARY = 56;
  public int JJTCONDITIONALFACTOR = 57;
  public int JJTCONDITIONALTERM = 58;
  public int JJTCONDITIONALEXPRESSION = 59;
  public int JJTWHERECLAUSE = 60;
  public int JJTSINGLEVALUEDPATHEXPRESSION = 61;
  public int JJTSIMPLESELECTEXPRESSION = 62;
  public int JJTSIMPLESELECTCLAUSE = 63;
  public int JJTDERIVEDCOLLECTIONMEMBERDECLARATION = 64;
  public int JJTTREATEDDERIVEDPATH = 65;
  public int JJTSIMPLEDERIVEDPATH = 66;
  public int JJTGENERALDERIVEDPATH = 67;
  public int JJTDERIVEDPATHEXPRESSION = 68;
  public int JJTSUBSELECTIDENTIFICATIONVARIABLEDECLARATION = 69;
  public int JJTSUBQUERYFROMCLAUSE = 70;
  public int JJTSUBQUERY = 71;
  public int JJTORDERBYITEM = 72;
  public int JJTORDERBYCLAUSE = 73;
  public int JJTHAVINGCLAUSE = 74;
  public int JJTGROUPBYITEM = 75;
  public int JJTGROUPBYCLAUSE = 76;


  public String[] jjtNodeName = {
    "void",
    "QLStatement",
    "SelectStatement",
    "SelectClause",
    "SelectItem",
    "SelectExpression",
    "JoinSingleValuedPathExpression",
    "Subtype",
    "JoinAssociationPathExpression",
    "Join",
    "RangeVariableDeclaration",
    "IdentificationVariableDeclaration",
    "FromClause",
    "MapFieldIdentificationVariable",
    "QualifiedIdentificationVariable",
    "GeneralIdentificationVariable",
    "SimpleSubpath",
    "GeneralSubpath",
    "TreatedSubpath",
    "StateFieldPathExpression",
    "StateValuedPathExpression",
    "SingleValuedObjectPathExpression",
    "AggregateExpression",
    "FunctionArg",
    "ScalarExpression",
    "TypeDiscriminator",
    "WhenClause",
    "GeneralCaseExpression",
    "CaseExpression",
    "EntityTypeExpression",
    "EnumExpression",
    "BooleanExpression",
    "DatetimeExpression",
    "StringExpression",
    "ArithmeticPrimary",
    "ArithmeticFactor",
    "ArithmeticTerm",
    "ArithmeticExpression",
    "AllOrAnyExpression",
    "StringExpressionComparison",
    "ArithmeticExpressionComparison",
    "BooleanExpressionComparison",
    "DatetimeExpressionComparison",
    "EntityTypeExpressionComparison",
    "ComparisonExpression",
    "ExistsExpression",
    "CollectionValuedPathExpression",
    "NullComparisonExpression",
    "LikeExpression",
    "InItem",
    "InExpression",
    "BetweenExpression",
    "ArithmeticBetweenExpression",
    "StringBetweenExpression",
    "DatetimeBetweenExpression",
    "SimpleCondExpression",
    "ConditionalPrimary",
    "ConditionalFactor",
    "ConditionalTerm",
    "ConditionalExpression",
    "WhereClause",
    "SingleValuedPathExpression",
    "SimpleSelectExpression",
    "SimpleSelectClause",
    "DerivedCollectionMemberDeclaration",
    "TreatedDerivedPath",
    "SimpleDerivedPath",
    "GeneralDerivedPath",
    "DerivedPathExpression",
    "SubselectIdentificationVariableDeclaration",
    "SubqueryFromClause",
    "Subquery",
    "OrderByItem",
    "OrderByClause",
    "HavingClause",
    "GroupByItem",
    "GroupByClause",
  };
}
/* JavaCC - OriginalChecksum=c2ce2354d5feb5d3691bea3a0ebfb7a4 (do not edit this line) */
