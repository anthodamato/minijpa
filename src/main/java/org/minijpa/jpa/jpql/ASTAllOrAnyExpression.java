/* Generated By:JJTree: Do not edit this line. ASTAllOrAnyExpression.java Version 7.0 */
 /* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.minijpa.jpa.jpql;

public class ASTAllOrAnyExpression extends SimpleNode {

	private boolean all = false;
	private boolean any = false;
	private boolean some = false;

	public ASTAllOrAnyExpression(int id) {
		super(id);
	}

	public ASTAllOrAnyExpression(JpqlParser p, int id) {
		super(p, id);
	}

	/**
	 * Accept the visitor. *
	 */
	public Object jjtAccept(JpqlParserVisitor visitor, Object data) {

		return visitor.visit(this, data);
	}

	public boolean isAll() {
		return all;
	}

	public void setAll(boolean all) {
		this.all = all;
	}

	public boolean isAny() {
		return any;
	}

	public void setAny(boolean any) {
		this.any = any;
	}

	public boolean isSome() {
		return some;
	}

	public void setSome(boolean some) {
		this.some = some;
	}

}
/* JavaCC - OriginalChecksum=a41db83865f2807d2999f2c4d9b6f250 (do not edit this line) */
