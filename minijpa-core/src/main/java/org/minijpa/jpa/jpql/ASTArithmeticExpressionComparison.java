/* Generated By:JJTree: Do not edit this line. ASTArithmeticExpressionComparison.java Version 7.0 */
 /* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.minijpa.jpa.jpql;

import org.minijpa.sql.model.condition.Condition;

public class ASTArithmeticExpressionComparison extends SimpleNode implements ConditionNode {

	private Condition condition;
	private String comparisonOperator;

	public ASTArithmeticExpressionComparison(int id) {
		super(id);
	}

	public ASTArithmeticExpressionComparison(JpqlParser p, int id) {
		super(p, id);
	}

	/**
	 * Accept the visitor. *
	 */
	public Object jjtAccept(JpqlParserVisitor visitor, Object data) {

		return visitor.visit(this, data);
	}

	@Override
	public Condition getCondition() {
		return condition;
	}

	@Override
	public void setCondition(Condition condition) {
		this.condition = condition;
	}

	public String getComparisonOperator() {
		return comparisonOperator;
	}

	public void setComparisonOperator(String comparisonOperator) {
		this.comparisonOperator = comparisonOperator;
	}

}
/* JavaCC - OriginalChecksum=257c2c57155eaa1123153f934e316cac (do not edit this line) */
