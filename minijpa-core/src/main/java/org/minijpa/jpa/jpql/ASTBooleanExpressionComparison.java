/* Generated By:JJTree: Do not edit this line. ASTBooleanExpressionComparison.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.minijpa.jpa.jpql;

import org.minijpa.sql.model.condition.Condition;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ASTBooleanExpressionComparison extends SimpleNode implements ConditionNode {
    private Logger log = LoggerFactory.getLogger(ASTBooleanExpression.class);
    private String comparisonOperator;
    private Condition condition;

    public ASTBooleanExpressionComparison(int id) {
        super(id);
    }

    public ASTBooleanExpressionComparison(JpqlParser p, int id) {
        super(p, id);
    }

    /**
     * Accept the visitor. *
     */
    public Object jjtAccept(JpqlParserVisitor visitor, Object data) {

        return visitor.visit(this, data);
    }

    public String getComparisonOperator() {
        return comparisonOperator;
    }

    public void setComparisonOperator(String comparisonOperator) {
        this.comparisonOperator = comparisonOperator;
        log.debug("setComparisonOperator: comparisonOperator={}",comparisonOperator);
    }

    @Override
    public Condition getCondition() {
        return condition;
    }

    @Override
    public void setCondition(Condition condition) {
        this.condition = condition;
    }
}
/* JavaCC - OriginalChecksum=5b7bb6cd7ce672b62c3e89a9c7393d35 (do not edit this line) */
